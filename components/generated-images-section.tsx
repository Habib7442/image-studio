'use client'

import Image from 'next/image'
import { Card, CardContent } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Download, Heart, Share2, Eye } from 'lucide-react'
import { useState } from 'react'

export function GeneratedImagesSection() {
  const [likedImages, setLikedImages] = useState<Set<number>>(new Set())

  // Landing assets images
  const images = [
    { id: 1, src: '/landing-assets/1.jpg', category: 'Portrait', likes: 42 },
    { id: 2, src: '/landing-assets/2.jpg', category: 'Lifestyle', likes: 38 },
    { id: 3, src: '/landing-assets/3.jpg', category: 'Professional', likes: 56 },
    { id: 4, src: '/landing-assets/4.jpg', category: 'Creative', likes: 29 },
    { id: 5, src: '/landing-assets/5.jpg', category: 'Portrait', likes: 67 },
    { id: 6, src: '/landing-assets/6.jpg', category: 'Lifestyle', likes: 43 },
    { id: 7, src: '/landing-assets/7.jpg', category: 'Professional', likes: 51 },
    { id: 8, src: '/landing-assets/8.jpg', category: 'Creative', likes: 34 },
    { id: 9, src: '/landing-assets/9.jpg', category: 'Portrait', likes: 48 },
    { id: 10, src: '/landing-assets/10.jpg', category: 'Lifestyle', likes: 39 }
  ]

  const toggleLike = (imageId: number) => {
    setLikedImages(prev => {
      const newSet = new Set(prev)
      if (newSet.has(imageId)) {
        newSet.delete(imageId)
      } else {
        newSet.add(imageId)
      }
      return newSet
    })
  }

  const downloadImage = (imageSrc: string, imageId: number) => {
    const link = document.createElement('a')
    link.href = imageSrc
    link.download = `generated-image-${imageId}.jpg`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
  }

  return (
    <section className="py-20 bg-gradient-to-br from-background via-background to-muted/10">
      <div className="container mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold mb-4">
            Generated by ImageStudioLab
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            See what our AI can create for you. Real examples from our community of creators.
          </p>
        </div>

        {/* Images Grid */}
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {images.map((image) => (
            <Card key={image.id} className="group hover:shadow-xl transition-all duration-300 overflow-hidden">
              <div className="relative aspect-square">
                <Image
                  src={image.src}
                  alt={`Generated image ${image.id}`}
                  fill
                  className="object-cover group-hover:scale-105 transition-transform duration-300"
                />
                
                {/* Overlay on hover */}
                <div className="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                  <div className="flex space-x-2">
                    <button
                      onClick={() => downloadImage(image.src, image.id)}
                      className="p-2 bg-white/20 backdrop-blur-sm rounded-full hover:bg-white/30 transition-colors"
                    >
                      <Download className="w-4 h-4 text-white" />
                    </button>
                    <button
                      onClick={() => toggleLike(image.id)}
                      className="p-2 bg-white/20 backdrop-blur-sm rounded-full hover:bg-white/30 transition-colors"
                    >
                      <Heart 
                        className={`w-4 h-4 ${
                          likedImages.has(image.id) 
                            ? 'text-red-500 fill-red-500' 
                            : 'text-white'
                        }`} 
                      />
                    </button>
                    <button className="p-2 bg-white/20 backdrop-blur-sm rounded-full hover:bg-white/30 transition-colors">
                      <Share2 className="w-4 h-4 text-white" />
                    </button>
                  </div>
                </div>

                {/* Category Badge */}
                <div className="absolute top-3 left-3">
                  <Badge variant="secondary" className="bg-white/90 text-black">
                    {image.category}
                  </Badge>
                </div>

                {/* Like Count */}
                <div className="absolute top-3 right-3">
                  <div className="flex items-center space-x-1 bg-black/50 backdrop-blur-sm rounded-full px-2 py-1">
                    <Heart className="w-3 h-3 text-white" />
                    <span className="text-xs text-white">
                      {likedImages.has(image.id) ? image.likes + 1 : image.likes}
                    </span>
                  </div>
                </div>
              </div>

              <CardContent className="p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <Eye className="w-4 h-4 text-muted-foreground" />
                    <span className="text-sm text-muted-foreground">
                      Generated by AI
                    </span>
                  </div>
                  <Badge variant="outline" className="text-xs">
                    High Quality
                  </Badge>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  )
}
